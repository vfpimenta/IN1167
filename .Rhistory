car = read.csv("/home/victor/dev/forecast/monthly-car-sales-in-quebec-1960.csv")
car
q()
car
expenses = read.csv("/home/victor/dev/forecast/monthly-expenses-in-brasil-2009.csv")
expenses
car.ts = ts(car[2], frequency=12, start=c(1960,1))
expenses.ts = ts(expenses[2], frequency=12, start=c(2009,7))
png('car-ts.png')
plot(car.ts, height=860)
plot(car.ts, width=860)
library(graphic)
library(graphical)
library(graphics)
plot(car.ts, width=860)
plot
dev.off()
png('car-ts.png',width=860)
plot(car.ts)
dev.off()
png('expenses-ts.png',width=860)
plot(expenses.ts)
dev.off()
png('car-acf.png',width=860)
acf(car.ts)
dev.off()
png('expenses-acf.png',width=860)
acf(expenses.ts)
dev.off()
library(tseries)
library(forecast)
png('car-decompose.png',width=860)
car.decompose = decompose(car.ts)
plot(car.decompose)
dev.off()
png('expenses-decompose.png',width=860)
expenses.decompose = decompose(expenses.ts)
plot(expenses.decompose)
dev.off()
car.diff = diff(car.ts, differences=1)
plot(car.diff)
adf.test(car.diff, alternative="stationary", k=1)
expenses.diff = diff(expenses.ts, differences=1)
plot(expenses.diff)
adf.test(expenses.diff, alternative="stationary", k=1)
png('car-diff.png',width=860)
plot(car.diff)
dev.off()
png('expenses-diff.png',width=860)
plot(expenses.diff)
dev.off()
pacf(car.diff)
png('car-pacf.png',width=860)
pacf(car.diff)
dev.off()
png('expenses-pacf.png',width=860)
pacf(expenses.diff)
dev.off()
auto.arima(car.diff)
auto.arima(car)
auto.arima(car.ts)
auto.arima(car.ts,seasonal=FALSE)
auto.arima(car.ts,seasonal=TRUE)
car.arima = arima(car.ts, order=c(0,1,3))
car.arima
car.forecast = forecast.Arima(car.arima, h=5, level=c(95))
forecast(object, h=ifelse(object$arma[5]>1,2âˆ—object$arma[5],10),level=c(80,95), ...)
library(forecast)
car.forecast = forecast.Arima(car.arima, h=5, level=c(95))
q()
plot(car.decompose$trend)
plot(expenses.decompose$trend)
car.arima
auto.arima(car.ts)
library(forecast)
library(tseries)
auto.arima(car.ts)
predict(car.arima, n.ahead=12)
plot(predict(car.arima, n.ahead=12))
z = predict(car.arima, n.ahead=12)
z
plot(z$pred)
plot(z$se)
z = predict(car.arima, n.ahead=4)
plot(z$pred)
plot(z$se)
plot(car.ts, z)
plot(car.ts, z, lty=1:2)
car.arima = auto.arima(car.ts)
car.predict = predict(car.arima, n.ahead=6)
car.arima
car.arima = arima(car.ts, order=c(0,1,1))
car.predict = predict(car.arima, n.ahead=6)
plot(car.predict)
plot(car.predict$pred)
plot(car.predict$se)
plot(car.ts, car.predict$se)
car.predict
car.arima = arima(car.ts, order=c(1,0,1))
car.predict = predict(car.arima, n.ahead=6)
car.predict
library(stats)
car.arima
predict.Arima
predict.Arima()
predict.arima
predict(car.arima, n.ahead=6)
car.ts
car.predict$pred
plot(car.ts, car.predict$pred, lty=1:2)
ts.plot(car.ts, car.predict$pred, lty=1:2)
predict(car.arima, n.ahead=4*12)
od = options(digits=5)
options(od)
od
auto.arima(car.ts)
auto.arima(car.ts, seasonal=FALSE)
car
tsdisplays
tsdispla
tsdisplay
car.arima = arima(car.ts, order=c(2,1,2))
car.arima
car.forecast = forecast(car.arima, h=12)
plot(car.forecast)
plot(car.forecast)
plot(car.forecast)
library(base)
length(car.ts)
9*12
car.ts
108-24
car.arima_h = arima(car.ts[-c(84,108)], order=c(2,1,2))
rm(car.predict)
car.forecast_h = forecast(car.arima_h,h=24)
plot(car.forecast_h, main=" ")
lines(car.ts)
hold = window(car.ts, start=84)
car.arima_h = arima(car.ts[-c(84,108)], order=c(2,1,2))
car.forecast_h = forecast(car.arima_h,h=24)
plot(car.forecast_h, main=" ")
lines(car.ts)
lines
plot(car.forecast_h, main=" ")
plot(car.forecast_h)
plot(car.ts)
plot(car.forecast_h)
hold = window(ts(car.ts), start=84)
car.arima_h = arima(ts(car.ts[-c(84,108)]), order=c(2,1,2))
car.forecast_h = forecast(car.arima_h,h=24)
plot(car.forecast_h, main=" ")
lines(car.ts)
png('test.png')
plot(car.forecast_h, main=" ")
lines(car.ts)
dev.off()
plot(car.forecast_h, car.ts)
plot(car.ts)
car.forecast_h
plot
plot(car.forecast_h)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
lines(car.ts)
car.ts
plot(car.forecast)
car.arima
plot(car.ts)
plot(car.forecast)
plot(car.forecast_h)
car.forecast
car.forecast_h
car.forecast_h = ts(car.forecast_h, frequancy=12, start=c(1966,1))
car.forecast_h = ts(car.forecast_h, frequency=12, start=c(1966,1))
car.forecast_h
car.arima_h
car.forecast_h = forecast(car.arima_h, h=24)
car.forecast_h
car.forecast
car.forecast_ts = ts(car.forecast_h, frequency=12, start=c(1966,1))
car.forecast_ts
forecast
rm car.forecast_ts
rm car.forecast_ts
rm(car.forecast_ts)
car.ts
car.arima_h
car.forecast_h = forecast(car.arima_h, h=24)
car.forecast_h
car.forecast_h = forecast(car.arima_h, h=24, start=c(1966,1))
ets
car.arima
car.arima_ts
car.arima_h
7*12
car.arima_h = arima(car.ts[1:84], order=c(2,1,2))
car.arima_h
car.forecast_h = forecast(car.arima_h, h=24)
car.forecast_h
car.forecast
rm(car.arima_h)
rm(car.forecast_h)
cars
car.ts
length(car.ts)
108-24
car.ts[1:84]
ts(car.ts[1:84], start=c(1960,1), frequency=12)
car._arima = arima(ts(car.ts[1:84], start=c(1960,1), frequency=12), order=c(2,1,2))
car._arima
car._forecast = forecast(car._arima, h=24)
car._forecast
plot(car._forecast)
lines(car.ts)
png('car-forecast.png')
plot(car._forecast)
lines(car.ts)
dev.off()
png('car-forecast.png',width=860)
plot(car._forecast)
lines(car.ts)
dev.off()
auto.arima(expenses.ts, seasonal=FALSE)
expenses.arima = arima(expenses.ts, order=c(0,1,0))
expenses.forecast = forecast(expenses.arima, h=12)
plot expenses.forecast
plot(expenses.forecast)
length(expenses.ts)
expenses.ts
86-8
expenses._arima = arima(ts(expenses.ts[1:78],start=c(2009,7),frequency=12),order=c(0,1,0))
expenses._forecast = forecast(expenses._arima, h = 8)
plot(expenses._forecast)
lines(expenses.ts)
plot(car.forecast)
arima(car.ts,seasonal=FALSE)
car.ts
auto.arima(car.ts, seasonal=TRUE)
car.sarima = arima(car.ts, order = c(0,1,0), seasonal=c(0,1,1))
car.sarima
car.sarima = auto.arima(car.ts, seasonal=TRUE)
car.sforecast = forecast(car.sarima, h=12)
plot(car.sforecast)
car._sarima = auto.arima(ts(car.ts[1,84], start=c(1960,1),frequency=12),seasonal=TRUE)
car._sarima = auto.arima(ts(car.ts[1:84], start=c(1960,1),frequency=12),seasonal=TRUE)
car._sforecast = forecast(car._sarima, h=24)
plot(car._sforecast)
lines(car.ts)
png('car-seasonal-forecast.png',width=860)
plot(car._sforecast)
lines(car.ts)
dev.off()
expenses.sarima = auto.arima(expenses.ts, seasonal=TRUE)
expenses.sarima
expenses.sforecast = forecast(expenses.sarima, h=12)
plot(expenses.sforecast)
expenses._sarima = auto.arima(ts(expenses.ts[1:78],start=c(2009,7),frequency=12),seasonal=TRUE)
expenses._sforecast = forecast(expenses._sarima, h=8)
plot(expenses._sforecast)
lines(expenses.ts)
png('expenses-seasonal-forecast.png',width=860)
plot(expenses._sforecast)
lines(expenses.ts)
dev.off()
ts(expenses.ts[1:78],start=c(2009,7),frequency=12)
plot(expenses._forecast)
lines(expenses.ts)
png('expenses-forecast.png',width=860)
plot(expenses._forecast)
lines(expenses.ts)
dev.off()
acf(car.ts)
acf
acf(car.ts, lag.max=20)
acf(car.diff)
acf(car.ts)
acf(car.diff)
pacf(car.diff)
auto.arima(car.ts)
auto.arima(car.ts, seasonal=FALSE)
pacf(car.diff)
car.ar = ar(car.ts, FALSE, 0)
car.ar = ar(car.ts, FALSE, 1)
car.ar
forecast(car.ar, h = 6)
plot(forecast(car.ar, h = 6))
pacf(car.diff)
pacf(car.diff, type='correlation')
pacf(car.ts)
car.ar = ar(car.ts, FALSE, 2)
plot(forecast(car.ar, h = 6))
png('car-acf.png',width=860)
acf(car.diff)
dev.off()
png('expenses-acf.png',width=860)
acf(expenses.diff)
dev.off()
car.ar
car.ar = ar(car.ts, FALSE, 1)
expenses.ar = ar(expenses.ts, FALSE, 1)
png('car-ar-forecast.png',width=860)
plot(forecast(car.ar,h=6))
dev.off()
png('expenses-ar-forecast.png',width=860)
plot(forecast(expenses.ar,h=6))
dev.off()
arma
car.arma = arma(car.ts, order=c(0,1))
plot(forecast(car.arma, h=6))
forecast(car.arma, h=6)
car.arma
tmp.arima = arima(ts(car.ts[1,84],start=c(1960,1),frequency=12),order=c(0,1,1))
tmp.arima = arima(ts(car.ts[1:84],start=c(1960,1),frequency=12),order=c(0,1,1))
tmp.forecast = forecast(tmp.arima, h=24)
plot(tmp.forecast)
lines(car.ts)
png('car-self.forecast.png',width=860)
plot(tmp.forecast)
lines(car.ts)
dev.off()
length(expenses.ts)
tmp.arima = arima(ts(expenses.ts[1:78],start=c(2009,7),frequency=12),order=c(0,1,1))
tmp.forecast = forecast(tmp.arima, h=24)
png('expenses-self.forecast.png',width=860)
plot(tmp.forecast)
lines(car.ts)
dev.off()
tmp.forecast = forecast(tmp.arima, h=8)
png('expenses-self.forecast.png',width=860)
plot(tmp.forecast)
lines(car.ts)
dev.off()
png('expenses-self.forecast.png',width=860)
plot(tmp.forecast)
lines(expenses.ts)
dev.off()
plot(tmp.forecast)
lines(expenses.ts)
png('expenses-self.forecast.png',width=860)
plot(tmp.forecast)
lines(expenses.ts)
dev.off()
car.arma
forecast(car.arma, h=6)
q()
car
q()
library(dlm)
dlm
examples dlm
example dlm
example(dlm)
x = dlmModReg(car.ts)
x
example(dlmForecast)
mod = dlmModReg(car.ts)
fore = dlmForecast(mod, nAhead=10)
fil - dlmFilter(car.ts,mod)
fil = dlmFilter(car.ts,mod)
fore = dlmForecast(fil, nAhead=10)
car.ts
lCars <- log(cars.ts)
lCars <- log(car.ts)
lCars
dlmCars <- dlmModPoly() + dlmModSeas(4)
dlmCars
buildFun <- function(x) {
  diag(W(dlmGas))[2:3] <- exp(x[1:2])
  V(dlmGas) <- exp(x[3])
   return(dlmGas)
}
buildFun <- function(x) {
  diag(W(dlmCars))[2:3] <- exp(x[1:2])
  V(dlmCars) <- exp(x[3])
  return(dlmCars)
}
(fit <- dlmMLE(lCars, parm = rep(0, 3), build = buildFun))$conv
dlmCars <- buildFun(fir$par)
dlmCars <- buildFun(fit$par)
drop(V(dlmCars))
diag(V(dlmCars))
diag(V(dlmCars))[2:3]
carsSmooth <- dlmSmooth(lCars, mod = dlmCars)
x <- cbind(lCars, dropFirst(carsSmooth$s[,c(1,3)]))
colnames(x) <- c("Cars", "Trend", "Seasonal")
plot(x, type = 'o', main = "Monthly car sales in Quebec 1960-1968")
carsFilt <- dlmFilter(lCars, mod=dlmCars)
carsFore <- dlmForecast(carsFilt, nAhead=20)
sqrtR <- sapply(carsFore$R, function(x) sqrt(x[1,1]))
pl <- carsFore$a[,1] + qnorm(0.05, sd = sqrtR)
pu <- carsFore$a[,1] + qnorm(0.95, sd = sqrtR)
x <- ts.union(window(lCars, start = c(1960, 1)),
  window(carsSmooth$s[,1], start = c(1960, 1)),
  carsFore$a[,1], pl, pu)
plot(x, plot.type = "single", type = 'o', pch = c(1, 0, 20, 3, 3),
  col = c("darkgrey", "darkgrey", "brown", "yellow", "yellow"),
  ylab = "Log car sales")
legend("bottomright", legend = c("Observed",
  "Smoothed (deseasonalized)",
  "Forecasted level", "90% probability limit"),
bty = 'n', pch = c(1, 0, 20, 3, 3), lty = 1,
 col = c("darkgrey", "darkgrey", "brown", "yellow", "yellow"))
q()
